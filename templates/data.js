var datas = {"problems": [{"context": "    42   \tflag.StringVar(&UserAdd, \"usera\", \"\", \"add a user base DefaultUsers,-usera user\")\n    43   \tflag.StringVar(&PassAdd, \"pwda\", \"\", \"add a password base DefaultPasses,-pwda password\")\n    44   \tflag.StringVar(&NoPorts, \"pn\", \"\", \"the ports no scan,as: -pn 445\")\n--> 45   \tflag.StringVar(&Command, \"c\", \"\", \"exec command (ssh)\")\n    46   \tflag.StringVar(&SshKey, \"sshkey\", \"\", \"sshkey file (id_rsa)\")\n    47   \tflag.StringVar(&Domain, \"domain\", \"\", \"smb domain\")\n    48   \tflag.StringVar(&Username, \"user\", \"\", \"username\")\n    49   \tflag.StringVar(&Password, \"pwd\", \"\", \"password\")", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\flag.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    42   \tflag.StringVar(&UserAdd, \"usera\", \"\", \"add a user base DefaultUsers,-usera user\")\n    43   \tflag.StringVar(&PassAdd, \"pwda\", \"\", \"add a password base DefaultPasses,-pwda password\")\n    44   \tflag.StringVar(&NoPorts, \"pn\", \"\", \"the ports no scan,as: -pn 445\")\n--> 45   \tflag.StringVar(&Command, \"c\", \"\", \"exec command (ssh)\")\n    46   \tflag.StringVar(&SshKey, \"sshkey\", \"\", \"sshkey file (id_rsa)\")\n    47   \tflag.StringVar(&Domain, \"domain\", \"\", \"smb domain\")\n    48   \tflag.StringVar(&Username, \"user\", \"\", \"username\")\n    49   \tflag.StringVar(&Password, \"pwd\", \"\", \"password\")", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\flag.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    42   \tflag.StringVar(&UserAdd, \"usera\", \"\", \"add a user base DefaultUsers,-usera user\")\n    43   \tflag.StringVar(&PassAdd, \"pwda\", \"\", \"add a password base DefaultPasses,-pwda password\")\n    44   \tflag.StringVar(&NoPorts, \"pn\", \"\", \"the ports no scan,as: -pn 445\")\n--> 45   \tflag.StringVar(&Command, \"c\", \"\", \"exec command (ssh)\")\n    46   \tflag.StringVar(&SshKey, \"sshkey\", \"\", \"sshkey file (id_rsa)\")\n    47   \tflag.StringVar(&Domain, \"domain\", \"\", \"smb domain\")\n    48   \tflag.StringVar(&Username, \"user\", \"\", \"username\")\n    49   \tflag.StringVar(&Password, \"pwd\", \"\", \"password\")", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\flag.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    42   \tflag.StringVar(&UserAdd, \"usera\", \"\", \"add a user base DefaultUsers,-usera user\")\n    43   \tflag.StringVar(&PassAdd, \"pwda\", \"\", \"add a password base DefaultPasses,-pwda password\")\n    44   \tflag.StringVar(&NoPorts, \"pn\", \"\", \"the ports no scan,as: -pn 445\")\n--> 45   \tflag.StringVar(&Command, \"c\", \"\", \"exec command (ssh)\")\n    46   \tflag.StringVar(&SshKey, \"sshkey\", \"\", \"sshkey file (id_rsa)\")\n    47   \tflag.StringVar(&Domain, \"domain\", \"\", \"smb domain\")\n    48   \tflag.StringVar(&Username, \"user\", \"\", \"username\")\n    49   \tflag.StringVar(&Password, \"pwd\", \"\", \"password\")", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\flag.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    221   }\n    222   \n    223   func getpath() string {\n--> 224   \tfile, _ := exec.LookPath(os.Args[0])\n    225   \tpath1, _ := filepath.Abs(file)\n    226   \tfilename := filepath.Dir(path1)\n    227   \tvar path string\n    228   \tif strings.Contains(filename, \"/\") {", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\common\\Parse.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    212   \t} else if OS == \"linux\" {\n    213   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -w 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    214   \t} else if OS == \"darwin\" {\n--> 215   \t\tcommand = exec.Command(bsenv, \"-c\", \"ping -c 1 -W 1 \"+ip+\" >/dev/null && echo true || echo false\") //ping -c 1 -i 0.5 -t 4 -W 2 -w 5 \"+ip+\" >/dev/null && echo true || echo false\"\n    216   \t}\n    217   \toutinfo := bytes.Buffer{}\n    218   \tcommand.Stdout = &outinfo\n    219   \terr := command.Start()", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\Plugins\\icmp.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}, {"context": "    52   \tclose(tasks)\n    53   }\n    54   \n--> 55   func executePoc(oReq *http.Request, p *Poc) (bool, error, string) {\n    56   \tc := NewEnvOption()\n    57   \tc.UpdateCompileOptions(p.Set)\n    58   \tif len(p.Sets) > 0 {\n    59   \t\tvar setMap StrMap", "match_type": "ast", "match_rule": "exec", "description": "Command injection may occur", "file_path": "./gotest/fscan-main\\WebScan\\lib\\check.go", "language": "go", "severity": "critical", "ptype": "后门", "confidence": 0.1}], "basic": {"totleNum": 40, "criticalLevel": 40, "highLevel": 0, "mediumLevel": 0, "lowLevel": 0, "prompt": 0}}